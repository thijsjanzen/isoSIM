// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sim_inf_chrom
List sim_inf_chrom(int popSize, double Hzero, int maxTime, double size_in_Morgan, int markers, int seed);
RcppExport SEXP _isoSIM_sim_inf_chrom(SEXP popSizeSEXP, SEXP HzeroSEXP, SEXP maxTimeSEXP, SEXP size_in_MorganSEXP, SEXP markersSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type popSize(popSizeSEXP);
    Rcpp::traits::input_parameter< double >::type Hzero(HzeroSEXP);
    Rcpp::traits::input_parameter< int >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< double >::type size_in_Morgan(size_in_MorganSEXP);
    Rcpp::traits::input_parameter< int >::type markers(markersSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_inf_chrom(popSize, Hzero, maxTime, size_in_Morgan, markers, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_isoSIM_sim_inf_chrom", (DL_FUNC) &_isoSIM_sim_inf_chrom, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_isoSIM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
